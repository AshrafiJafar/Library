@model IEnumerable<Library.Models.Person>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a href="#" onclick="addPerson()">Create New</a>
</p>



<table class="table" id="table-people">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NationalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mobile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Balance)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @(await Html.PartialAsync("_tableBody", Model))
    </tbody>
</table>


@section Scripts{
    <script>

        $('[data-toggle="tooltip"]').tooltip({
            position: { my: "left+3 bottom-3"/*, at: "right center"*/ }
        });

        function addPerson() {

            var dialog = bootbox.confirm(
                {
                    size: 'xl',
                    title: "Add Person",
                    message: "Loading ...",
                    buttons: {
                        confirm: {
                            label: "Submit",
                            className: "btn-success"
                        },
                        cancel: {
                            label: "Cancel",
                            className: "btn-danger"
                        }
                    },
                    callback: function (result) {
                        if (result === true) {

                            var formData = $("#create-form").serializeArray();
                            $.ajax({
                                url: "/Person/Create",
                                method: "Post",
                                data: formData,
                                success: function (data) {
                                    dialog.modal("hide");

                                    $('tbody').html(data);

                                },
                                error: function (result) {

                                }
                            });


                            return false;
                        }
                    }
                }
            );
            dialog.init(function () {

                $.ajax({
                    url: "/Person/Create",
                    method: "Get",
                    success: function (data) {
                        dialog.find(".bootbox-body").html(data);
                    },
                    error: function (result) {

                    }
                });

            });
        }


        function edit(id) {

            var dialog = bootbox.confirm(
                {
                    size: 'xl',
                    title: "Add Person",
                    message: "Loading ...",
                    buttons: {
                        confirm: {
                            label: "Submit",
                            className: "btn-success"
                        },
                        cancel: {
                            label: "Cancel",
                            className: "btn-danger"
                        }
                    },
                    callback: function (result) {
                        if (result === true) {

                            var formData = $("#edit-form").serializeArray();
                            $.ajax({
                                url: "/Person/Edit",
                                method: "Post",
                                data: formData,
                                success: function (data) {
                                    dialog.modal("hide");

                                    $('tbody').html(data);

                                },
                                error: function (result) {

                                }
                            });


                            return false;
                        }
                    }
                }
            );
            dialog.init(function () {

                $.ajax({
                    url: "/Person/Edit/" + id,
                    method: "Get",
                    success: function (data) {
                        dialog.find(".bootbox-body").html(data);
                    },
                    error: function (result) {

                    }
                });

            });
        }


        function balanceIncrement(id) {

            var dialog = bootbox.confirm(
                {
                    size: 'small',
                    title: "Add Person",
                    message: "Loading ...",
                    buttons: {
                        confirm: {
                            label: "Submit",
                            className: "btn-success"
                        },
                        cancel: {
                            label: "Cancel",
                            className: "btn-danger"
                        }
                    },
                    callback: function (result) {
                        if (result === true) {

                            var formData = $("#balance-form").serializeArray();
                            $.ajax({
                                url: "/Person/Balance",
                                method: "Post",
                                data: formData,
                                success: function (data) {
                                    dialog.modal("hide");

                                    $('tbody').html(data);

                                },
                                error: function (result) {
                                    debugger;
                                }
                            });


                            return false;
                        }
                    }
                }
            );
            dialog.init(function () {

                $.ajax({
                    url: "/Person/Balance/" + id,
                    method: "Get",
                    success: function (data) {
                        dialog.find(".bootbox-body").html(data);
                    },
                    error: function (result) {

                    }
                });

            });
        }



        function deletePerson(id, firstName, lastname, e) {

            bootbox.confirm(
                {
                    size: 'small',
                    buttons: {
                        confirm: {
                            label: "Yes",
                            className: "btn-success"
                        },
                        cancel: {
                            label: "No",
                            className: "btn-danger"
                        }
                    },
                    message: 'Are you sure to delete ' + firstName + ' ' + lastname + '?',
                    callback: function (result) {
                        if (result === true) {

                            $.ajax({
                                url: "/Person/Delete/" + id,
                                method: "Post",
                                success: function (result) {
                                    //window.location.reload();
                                    $(e.target).closest('tr').remove();
                                },
                                error: function (result) {
                                    debugger;
                                }
                            });
                        }

                    }
                }
            );
        }


    </script>
}